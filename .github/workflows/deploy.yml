name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Distribute
    runs-on: ubuntu-latest
    steps:
      - name: "checkout"
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: copy google-service
        env:
          GOOGLE_SERVICE: ${{secrets.GOOGLE_SERVICES_JSON}}
        run: echo $GOOGLE_SERVICE | base64 --decode --ignore-garbage > ./app/src/google-services.json

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: setup & cache bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundler
          key: ${{runner.os}}-gems-${{hashFiles('**/Gemfile.lock')}}
          restore-keys: |
            ${{runner.os}}-gems-

      - name: setup gradle
        uses: gradle/gradle-build-action@v2s

      - name: install bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: copy keystores
        run: |
          echo ${{secrets.DEV_KEYSTORE}} | base64 --decode --ignore-garbage > ./app/dev.keystore
          echo ${{secrets.RELEASE_KEYSTORE}} | base64 --decode --ignore-garbage > ./app/release.keystore
          echo ${{secrets.KEYSTORE_PROPERTIES}} | base64 --decode --ignore-garbage > ./keystore.properties

      - name: deploy dev & distribute via Firebase App Distribution
        if: github.ref == 'refs/heads/main'
        env:
          FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
        run: bundle exec fastlane dev